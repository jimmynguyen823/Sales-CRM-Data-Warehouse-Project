/****** Create Database ******/
/*
USE [master]
GO

IF  EXISTS (SELECT name FROM sys.databases WHERE name = N'DWSales')
  BEGIN
     -- Close connections to the DWPubsSales database 
    DROP DATABASE [DWSales]
  END
GO

CREATE DATABASE [DWSales] 
GO;
*/

USE [DWSales]
GO

/****** Create the Dimension Tables ******/

/****** Create the Internal Contact table ******/
CREATE TABLE DWSales.dbo.INTERNAL_CONTACT_DIMENSION (
	INTERNAL_CONTACT_KEY BIGINT IDENTITY NOT NULL 
	,EMPLOYEE_ID BIGINT NOT NULL
	,[USER_ID] nvarchar(50) NOT NULL
	,BRANCH nvarchar(50) NOT NULL
	,DEPARTMENT nvarchar(50) NULL
	,FIRST_NAME nvarchar(100) NOT NULL
	,LAST_NAME nvarchar(100) NULL
	,DISPLAY_NAME nvarchar(100) NOT NULL
	,[STATUS] nvarchar(50) NOT NULL
	,EMAIL nvarchar(150) NULL
	,TITLE nvarchar(100) NULL
	,SUPERVISOR_EMPLOYEE_ID BIGINT NULL
	,EMPLOYMENT_TYPE nvarchar(50)  NULL
	,MANAGERIAL_LEVEL nvarchar (150) NULL
	,[LOCATION_DETAIL] nvarchar (100) NULL
	,[START_DATE] datetime NOT NULL
	,[END_DATE] datetime NULL
	,IS_CURRENT NVARCHAR(1) NULL DEFAULT('Y')
	,INSERT_DATE datetime NOT NULL DEFAULT GETDATE()
	CONSTRAINT PK_INTERNAL_CONTACT_DIMENSION PRIMARY KEY (INTERNAL_CONTACT_KEY)
)

/****** Create the current salesperson table ******/
CREATE TABLE DWSales.dbo.SALESPERSON_CURRENT_DIMENSION(
	SALESPERSON_KEY INT IDENTITY NOT NULL
	,LOAD_YEAR_MONTH int NOT NULL
	,LOAD_YEAR_MONTH_NAME nvarchar(100)
	,SALESPERSON_EMPLOYEE_ID BIGINT NOT NULL
	,SALESPERSON_NAME nvarchar(150) NOT NULL
	,SALESPERSON_TITLE nvarchar(100) NOT NULL
	,SALESPERSON_BRANCH nvarchar(100) NOT NULL
	,SALESPERSON_DISTRICT nvarchar(100) NOT NULL
	,SALESPERSON_COUNTRY_CODE nvarchar(100) NOT NULL
	,SALESPERSON_COUNTRY nvarchar(100) NOT NULL
	,SALESPERSON_REGION_CODE nvarchar(100) NOT NULL
	,SALESPERSON_REGION nvarchar(100) NOT NULL 
	,SALESPERSON_GEO nvarchar(100) NOT NULL 
	,SALESPERSON_START_DATE DATE NOT NULL
	,SALESPERSON_TENURE_YEARS DECIMAL(18,2) NOT NULL
	,SALESPERSON_TENURE_YEARS_ROUND INT NOT NULL
	,SALESPERSON_STATUS nvarchar(50) NOT NULL
	,SALESPERSON_TRANSFERRED_FROM nvarchar(100) NOT NULL
	,REPORTING_YN nvarchar(10) NOT NULL
	,BRIDGE_FLAG_YN nvarchar(10) NOT NULL
	,INSERT_DATE datetime NULL DEFAULT GETDATE()
	CONSTRAINT PK_SALESPERSON_CURRENT_DIMENSION PRIMARY KEY (SALESPERSON_KEY)
)


/****** Create the Date Dimension table ******/
CREATE TABLE DWSales.dbo.DATE_DIMENSION (
  [DATE_KEY] int NOT NULL IDENTITY
, [DATE] DATE NOT NULL
, [DATE_NAME] nVarchar(100)
, [DATE_DAY_KEY] int NOT NULL
, [DATE_DAY_NAME] nVarchar(50) NOT NULL
, [DATE_MONTH_KEY] int NOT NULL
, [DATE_MONTH_NAME] nVarchar(50) NOT NULL
, [DATE_QUARTER_KEY] int NOT NULL
, [DATE_QUARTER_NAME] nVarchar(50) NOT NULL
, [DATE_QUARTER] nVarchar(50) NOT NULL
, [DATE_YEAR_MONTH_KEY] int NOT NULL
, [DATE_YEAR_MONTH_NAME] nVarchar(50) NOT NULL
, [DATE_YEAR_KEY] int NOT NULL
, [DATE_YEAR_NAME] nVarchar(50) NOT NULL
, INSERT_DATE datetime NOT NULL DEFAULT GETDATE()
CONSTRAINT PK_DATE_DIMENSION PRIMARY KEY (DATE_KEY)
)


-- Since the date table has no associated source table we can fill the data
-- using a SQL script or wait until the ETL process. Either way, here is the 
-- code to use.

-- Create variables to hold the start and end date
DECLARE @StartDate datetime = '01/01/2015'
DECLARE @EndDate datetime = '01/01/2030' 

-- Use a while loop to add dates to the table
DECLARE @DateInProcess datetime
SET @DateInProcess = @StartDate

WHILE @DateInProcess <= @EndDate
 BEGIN
 -- Add a row into the date dimension table for this date
 INSERT INTO DWSales.dbo.DATE_DIMENSION 
 ( [DATE], [DATE_NAME], [DATE_DAY_KEY], [DATE_DAY_NAME], [DATE_MONTH_KEY], [DATE_MONTH_NAME], [DATE_QUARTER_KEY], [DATE_QUARTER_NAME], [DATE_QUARTER], [DATE_YEAR_MONTH_KEY], [DATE_YEAR_MONTH_NAME], [DATE_YEAR_KEY], [DATE_YEAR_NAME] )
 VALUES ( 
    @DateInProcess --[Date]
  , CAST(DateName( month, @DateInProcess ) AS NVARCHAR(50)) + ' ' + CAST(DAY( @DateInProcess) AS NVARCHAR(50)) +', ' + Cast(Year(@DateInProcess) as nVarchar(50)) -- datename
  , DAY( @DateInProcess) --DATE_DAY_KEY
  , DateName(weekday, @DateInProcess ) -- [DateDayNumber) 
  , Month( @DateInProcess ) -- [Month]   
  , DateName( month, @DateInProcess ) -- [MonthName]
  , DateName( quarter, @DateInProcess ) -- DATE_QUARTER_KEY
  , 'Q' + DateName( quarter, @DateInProcess ) + ' - ' + Cast( Year(@DateInProcess) as nVarchar(50) )  -- DATE_QUARTER_NAME
  , 'Q' + DateName( quarter, @DateInProcess ) -- DATE_QUARTER
  , CASE 
		WHEN LEN(MONTH(@DateInProcess )) = 1 THEN CONCAT(Year(@DateInProcess), CONCAT('0', MONTH(@DateInProcess)))
		WHEN LEN(MONTH(@DateInProcess )) = 2 THEN CONCAT(Year(@DateInProcess), Month(@DateInProcess))
	end -- DATE_YEAR_MONTH_KEY
  , DateName( month, @DateInProcess ) + ' ' + Cast(Year(@DateInProcess ) as nVarchar(50)) -- DATE_YEAR_MONTH_NAME
  , Year( @DateInProcess) -- DATE_YEAR_KEY
  , Cast(Year(@DateInProcess) as nVarchar(50)) -- YEAR
  )  
 -- Add a day and loop again
 SET @DateInProcess = DateAdd(d, 1, @DateInProcess)
 END



/****** Create the Branch Dimension table ******/
CREATE TABLE DWSales.dbo.BRANCH_DIMENSION (
  [BRANCH_KEY] int NOT NULL IDENTITY
, [BRANCH_CODE] nVarchar(25) NOT NULL
, [BRANCH_NUMBER] nVarchar(25) NOT NULL
, [BRANCH_NAME] nVarchar(100) NOT NULL
, [DISTRICT] nVarchar(50) NOT NULL
, [COUNTRY_CODE] nVarchar(50) NOT NULL
, [COUNTRY_NAME] nVarchar(50) NOT NULL
, [REGION_PL_CODE] nVarchar(50) NOT NULL
, [REGION_PL_NAME] nVarchar(50) NOT NULL
--, [REGION_CODE_1] nVarchar(50) NOT NULL
--, [REGION_CODE_2] nVarchar(50) NOT NULL
, [REGION_GEO_NAME1] nVarchar(50) NOT NULL
, [REGION_GEO_NAME2] nVarchar(50) NOT NULL
, [REGION_GEO_NAME3] nVarchar(50) NOT NULL
, [ALLOCATION_REGION] nVarchar(50) NOT NULL
, [ACCOUNTING_COMPANY] nVarchar(50) NOT NULL
, [CURRENCY] nVarchar(50) NOT NULL
, [OPERATIONAL_BRANCH_INDICATOR] nVarchar(50) NOT NULL
, INSERT_DATE datetime NOT NULL DEFAULT GETDATE()
CONSTRAINT PK_BRANCH_DIMENSION PRIMARY KEY (BRANCH_KEY)
)


/****** Create the New Client Dimension table ******/
CREATE TABLE DWSales.dbo.CLIENT_DIMENSION (
	CLIENT_KEY BIGINT IDENTITY NOT NULL, 
	CLIENT_NUMBER NVARCHAR(8), 
	CLIENT_NAME NVARCHAR(160), 
	MASTER_CLIENT_NUMBER NVARCHAR(9), 
	MASTER_CLIENT_NAME NVARCHAR(160), 
	ADDR_LINE1 NVARCHAR(140), 
	ADDR_LINE2 NVARCHAR(140), 
	CITY NVARCHAR(140), 
	[STATE] NVARCHAR(2), 
	ZIP NVARCHAR(10), 
	COUNTRY NVARCHAR(140), 
	PHONE NVARCHAR(20), 
	BRANCH_CLIENT_INDICATOR NVARCHAR(1), 
	ACCOUNT_TYPE NVARCHAR(36), 
	GCI NVARCHAR(8), 
	GCI_NAME NVARCHAR(160), 
	GCI_ADDR_LINE1 NVARCHAR(140), 
	GCI_ADDR_LINE2 NVARCHAR(140), 
	GCI_CITY NVARCHAR(140), 
	GCI_STATE NVARCHAR(2), 
	GCI_ZIP NVARCHAR(10),
	GCI_COUNTRY NVARCHAR(140), 
	GCI_PHONE NVARCHAR(20), 
	GCI_FLAG NVARCHAR(1), 
	BCC_REPLACEMENT_FLAG NVARCHAR(1),
	MASTER_CLIENT_REPORTING NVARCHAR(160), 
	FAMILY_TREE_APEX_GCI NVARCHAR(35), 
	FAMILY_TREE_APEX_NAME NVARCHAR(140), 
	FAMILY_TREE_APEX_UNIQUE_YN NVARCHAR(1), 
	FAMILY_TREE_PARENT_GCI NVARCHAR(35), 
	FAMILY_TREE_PARENT_NAME NVARCHAR(140), 
	FAMILY_TREE_HAS_PARENT_YN NVARCHAR(1), 
	CLIENT_ACTIVE_YN NVARCHAR(1), 
	CUSTOMER_ORGANIZATION_ID NVARCHAR(9), 
	CUSTOMER_ORGANIZATION_NAME NVARCHAR(60), 
	DUNS_NUMBER NVARCHAR(9), 
	--[START_DATE] DATETIME NOT NULL,
	--END_DATE DATETIME NULL,
	INSERT_DATE datetime NOT NULL DEFAULT GETDATE()
CONSTRAINT PK_CLIENT_DIMENSION PRIMARY KEY (CLIENT_KEY)
)


/***** Create the STAGE Meetings table ******/
CREATE TABLE DWSales.stage.STAGE_MEETING (
	STAGE_MEETING_KEY BIGINT IDENTITY  NOT NULL, 
	MEETING_ID NVARCHAR(80), 
	ACCOUNT_ID NVARCHAR(8), 
	ACCOUNT_NAME NVARCHAR(240), 
	ACTIVITY_CONTEXT NVARCHAR(40), 
	ADDRESS_LINE1 NVARCHAR(60), 
	ADDRESS_LINE2 NVARCHAR(60), 
	ADDRESS_LINE3 NVARCHAR(60), 
	CITY NVARCHAR(35), 
	COMPANY_ORGANIZATION_ID NVARCHAR(8), 
	COUNTRY_NAME NVARCHAR(75), 
	CREATION_DATE_TIME DATETIME, 
	GCI_NUMBER NVARCHAR(8), 
	INDUSTRY_CODE NVARCHAR(100), 
	INDUSTRY_DESCRIPTION NVARCHAR(400), 
	INVOLVED_BRANCHES NVARCHAR(740), 
	IS_REVIEW NVARCHAR(1), 
	LAST_MODIFICATION_DATE_TIME DATETIME, 
	LEGAL_NAME NVARCHAR(60), 
	LOCATION_NAME NVARCHAR(75), 
	MEETING_END_DATE_TIME DATETIME, 
	MEETING_METHOD_CODE NVARCHAR(36), 
	MEETING_OBJECTIVE NVARCHAR(2500), 
	MEETING_START_DATE_TIME DATETIME, 
	MEETING_SUBJECT NVARCHAR(300), 
	MEETING_TYPE_CODE NVARCHAR(36), 
	MEETING_CONTACT_ROLES NVARCHAR(50),
	MEETING_CONTACT_ROLE_EMPLOYEE_ID BIGINT,
	OPPORTUNITY_COUNT INTEGER, 
	OWNER_EMPLOYEE_ID BIGINT, 
	OWNING_BRANCH_CODE NVARCHAR(120), 
	POSTAL_CODE NVARCHAR(75), 
	PRODUCTS_AIR_FLAG_YN NVARCHAR(1), 
	PRODUCTS_CUSTOMS_FLAG_YN NVARCHAR(1), 
	PRODUCTS_DISTRIBUTION_FLAG_YN NVARCHAR(1), 
	PRODUCTS_INSURANCE_FLAG_YN NVARCHAR(1), 
	PRODUCTS_OCEAN_FLAG_YN NVARCHAR(1), 
	PRODUCTS_ORDER_MANAGEMENT_FLAG_YN NVARCHAR(1), 
	PRODUCTS_OTHER_FLAG_YN NVARCHAR(1), 
	PRODUCTS_PROJECT_CARGO_FLAG_YN NVARCHAR(1), 
	PRODUCTS_TRANSCON_FLAG_YN NVARCHAR(1), 
	PRODUCT_CODES NVARCHAR(140), 
	STATE_PROVINCE_NAME NVARCHAR(75), 
	STATUS_CODE NVARCHAR(36), 
	VERTICAL_INDUSTRY_TEAM_CODE NVARCHAR(36), 
	--CHECKSUM NNVARCHAR(32), 
	--INSERT_DTTM DATETIME, 
	--UPDATE_DTTM DATETIME, 
	MEETING_PRIMARY_EXTERNAL_CONTACT_ID NVARCHAR(20), 
	DUNS_NUMBER NVARCHAR(9), 
	POST_MEETING_NOTES NVARCHAR(4000), 
	PRE_MEETING_NOTES NVARCHAR(4000), 
	CUSTOMER_ACCOUNT_OWNER_EMPLOYEE_ID BIGINT, 
	CLOSE_DATE_TIME DATETIME,
	INSERT_DATE datetime NOT NULL DEFAULT GETDATE()
	CONSTRAINT PK_STAGE_MEETING PRIMARY KEY (STAGE_MEETING_KEY)
)




/****** Create the Meetings table ******/
CREATE TABLE DWSales.sales.MEETING (
	MEETING_KEY BIGINT IDENTITY  NOT NULL, 
	MEETING_ID VARCHAR(80), 
	ACCOUNT_ID VARCHAR(8), 
	ACCOUNT_NAME VARCHAR(240), 
	ACTIVITY_CONTEXT NVARCHAR(40), 
	ADDRESS_LINE1 NVARCHAR(60), 
	ADDRESS_LINE2 NVARCHAR(60), 
	ADDRESS_LINE3 NVARCHAR(60), 
	CITY NVARCHAR(35), 
	COMPANY_ORGANIZATION_ID NVARCHAR(8), 
	COUNTRY_NAME NVARCHAR(75), 
	CREATION_DATE_TIME DATETIME, 
	GCI_NUMBER NVARCHAR(8),
	CLIENT_KEY BIGINT,  
	INDUSTRY_CODE NVARCHAR(100), 
	INDUSTRY_DESCRIPTION NVARCHAR(400), 
	INVOLVED_BRANCHES NVARCHAR(740), 
	IS_REVIEW NVARCHAR(1), 
	LAST_MODIFICATION_DATE_TIME DATETIME, 
	LEGAL_NAME NVARCHAR(60), 
	LOCATION_NAME NVARCHAR(75), 
	MEETING_END_DATE_TIME DATETIME, 
	MEETING_METHOD_CODE NVARCHAR(36), 
	MEETING_OBJECTIVE NVARCHAR(2500), 
	MEETING_START_DATE_TIME DATETIME, 
	MEETING_SUBJECT NVARCHAR(300), 
	MEETING_TYPE_CODE NVARCHAR(36), 
	OPPORTUNITY_COUNT INTEGER, 
	OWNER_EMPLOYEE_ID BIGINT, 
	OWNING_BRANCH_CODE NVARCHAR(120), 
	POSTAL_CODE NVARCHAR(75), 
	PRODUCTS_AIR_FLAG_YN NVARCHAR(1), 
	PRODUCTS_CUSTOMS_FLAG_YN NVARCHAR(1), 
	PRODUCTS_DISTRIBUTION_FLAG_YN NVARCHAR(1), 
	PRODUCTS_INSURANCE_FLAG_YN NVARCHAR(1), 
	PRODUCTS_OCEAN_FLAG_YN NVARCHAR(1), 
	PRODUCTS_ORDER_MANAGEMENT_FLAG_YN NVARCHAR(1), 
	PRODUCTS_OTHER_FLAG_YN NVARCHAR(1), 
	PRODUCTS_PROJECT_CARGO_FLAG_YN NVARCHAR(1), 
	PRODUCTS_TRANSCON_FLAG_YN NVARCHAR(1), 
	PRODUCT_CODES NVARCHAR(140), 
	STATE_PROVINCE_NAME NVARCHAR(75), 
	STATUS_CODE NVARCHAR(36), 
	VERTICAL_INDUSTRY_TEAM_CODE NVARCHAR(36), 
	--CHECKSUM NNVARCHAR(32), 
	--INSERT_DTTM DATETIME, 
	--UPDATE_DTTM DATETIME, 
	MEETING_PRIMARY_EXTERNAL_CONTACT_ID NVARCHAR(20), 
	DUNS_NUMBER NVARCHAR(9), 
	POST_MEETING_NOTES NVARCHAR(4000), 
	PRE_MEETING_NOTES NVARCHAR(4000), 
	CUSTOMER_ACCOUNT_OWNER_EMPLOYEE_ID BIGINT, 
	CLOSE_DATE_TIME DATETIME,
	INSERT_DATE datetime NOT NULL DEFAULT GETDATE()
	CONSTRAINT PK_MEETING PRIMARY KEY (MEETING_KEY)

)

/****** Create the Meetings Contact table ******/
CREATE TABLE DWSales.sales.MEETING_CONTACTS (
	MEETING_CONTACTS_KEY BIGINT IDENTITY NOT NULL, 
	MEETING_KEY BIGINT NOT NULL, 
	--MEETING_ID nVARCHAR(80) NOT NULL, 
	EMPLOYEE_ID BIGINT NOT NULL, 
	MEETING_CONTACT_ROLES VARCHAR(36), 
	INSERT_DATE datetime NOT NULL DEFAULT GETDATE()
	CONSTRAINT PK_MEETING_CONTACTS PRIMARY KEY (MEETING_CONTACTS_KEY)
)

/****** Create the STAGE Opportunity Service Item table ******/
CREATE TABLE DWSales.stage.STAGE_OPPORTUNITY_SERVICE_ITEM (
	STAGE_OPPORTUNITY_SERVICE_ITEM_KEY BIGINT IDENTITY  NOT NULL, 
	OPPORTUNITY_ID NVARCHAR(80) NOT NULL, 
	--OC_METADATA_ID_1 BIGINT NOT NULL, 
	--OC_METADATA_ID_2 BIGINT NOT NULL, 
	ACTIVITY_CONTEXT NVARCHAR(40), 
	--COMPANY_ORGANIZATION_ID NVARCHAR(8), 
	CREATION_DATE_TIME DATETIME NOT NULL, 
	ESTIMATED_COMPLETION_DATE DATE, 
	CLOSE_DATE_TIME DATETIME, 
	CLOSE_YEAR_MONTH INTEGER, 
	OPPORTUNITY_LAST_MODIFICATION_DATE_TIME DATETIME, 
	ESTIMATED_TOTAL_MONTHLY_REVENUE_FROM_SERVICE_ITEMS_AMOUNT DECIMAL(18,3), 
	ESTIMATED_TOTAL_MONTHLY_REVENUE_FROM_SERVICE_ITEMS_CURRENCY_CODE NVARCHAR(3), 
	GCI_NUMBER NVARCHAR(8), 
	--INDUSTRY NVARCHAR(100), 
	INVESTMENT_AND_DESIRABILITY_CODE NVARCHAR(25), 
	IS_PROJECT_BASED NVARCHAR(1), 
	IS_REQUEST_FOR_INFORMATION NVARCHAR(1), 
	IS_REQUEST_FOR_PRICE NVARCHAR(1), 
	IS_REQUEST_FOR_QUOTE NVARCHAR(1), 
	--LATEST_EXTERNAL_MEETING_DATE DATE, 
	LEGAL_NAME NVARCHAR(240), 
	OPPORTUNITY_DESCRIPTION NVARCHAR(300), 
	OPPORTUNITY_OWNER_ID BIGINT, 
	OPPORTUNITY_OWNER_BRANCH  NVARCHAR(120),
	--OPPORTUNITY_SOLUTION NVARCHAR(max), 
	OPPORTUNITY_STATUS_CHANGE_DATE_TIME DATETIME NOT NULL, 
	OPPORTUNITY_STATUS_CODE NVARCHAR(100) NOT NULL, 
	OPPORTUNITY_STEP_PROGRESSION_CODE NVARCHAR(100), 
	OPPORTUNITY_STEP_PROGRESSION_CODE_CHANGE_DATE_TIME DATETIME NULL, 
	OPPORTUNITY_TYPE_CODE NVARCHAR(80)  NULL, 
	OPPORTUNITY_TYPE_CODE_CHANGE_DATE_TIME DATETIME NULL, 
	OWNING_BRANCH_CODE NVARCHAR(120), 
	PERCENT_OF_ESTIMATED_MONTHLY_REVENUE_FROM_INCUMBENCY_CODE NVARCHAR(100), 
	PRIMARY_FOCUS_CODE NVARCHAR(100), 
	--PROJECT_BASED_DURATION_IN_MONTHS BIGINT, 
	--REASON_LOST NVARCHAR(100), 
	SEGMENTATION_CODE NVARCHAR(100), 
	TRANSITION_STATUS_CODE NVARCHAR(100), 
	USER_ESTIMATED_TOTAL_MONTHLY_REVENUE_AMOUNT DECIMAL(18,3), 
	USER_ESTIMATED_TOTAL_MONTHLY_REVENUE_AMOUNT_CURRENCY_CODE NVARCHAR(12), 
	--[CHECKSUM] NVARCHAR(32), 
	TRANSITION_STATUS_SET_TIME DATETIME, 
	ACCOUNT_ID NVARCHAR(8), 
	ACCOUNT_NAME NVARCHAR(240), 
	CUSTOMER_ACCOUNT_MANAGEMENT_LEVEL_CODE NVARCHAR(36), 
	--BRANCH_KEY INTEGER, 
	--CLIENT_KEY INTEGER, 
	--CREATION_DATE_TIME_DATE_KEY INTEGER, 
	--ESTIMATED_COMPLETION_DATE_DATE_KEY INTEGER, 
	--LAST_MODIFICATION_DATE_TIME_DATE_KEY INTEGER, 
	ACTUAL_BID_KICK_OFF_DATE DATE, 
	BID_RECEIVED_ACT_DATE DATE, 
	BID_RECEIVED_EST_DATE DATE, 
	BID_ROUND_ACTUAL_COMPLETION_DATE DATE, 
	BID_ROUND_ESTIMATED_COMPLETION_DATE DATE, 
	BID_ROUND_NUMBER INTEGER, 
	CUSTOMER_DEBRIEF_ACTUAL_DATE DATE, 
	CUSTOMER_DEBRIEF_ESTIMATED_DATE DATE, 
	ESTIMATED_BID_KICK_OFF_DATE DATE, 
	INVOLVED_BRANCHES NVARCHAR(740), 
	OUTCOME_RECEIVED_ACTUAL_DATE DATE, 
	OUTCOME_RECEIVED_ESTIMATED_DATE DATE, 
	PRODUCTS_AIR_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_CUSTOMS_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_DISTRIBUTION_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_OCEAN_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_ORDER_MANAGEMENT_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_OTHER_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_PROJECT_CARGO_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_TRANSCON_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCT_CODES_FROM_BID NVARCHAR(140), 
	INDUSTRY_DESCRIPTION NVARCHAR(400), 
	REASON_LOST_DESCRIPTION NVARCHAR(1020), 
	VERTICAL_INDUSTRY_TEAM_CODE NVARCHAR(36), 
	ACCOUNT_STATUS NVARCHAR(36), 
	CUSTOMER_ACCOUNT_OWNER_EMPLOYEE_ID BIGINT, 
	CUSTOMER_ACCOUNT_OWNER_NAME NVARCHAR(270), 
	EXTERNAL_CONTACT_NAMES NVARCHAR(1500), 
	DUNS_NUMBER NVARCHAR(9), 
	PRODUCTS_INSURANCE_FLAG_YN NVARCHAR(1) NOT NULL , 
	PRODUCT_CODES_FROM_USER NVARCHAR(140) NULL, 
	PRODUCTS_BID_AIR_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_BID_CUSTOMS_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_BID_DISTRIBUTION_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_BID_INSURANCE_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_BID_OCEAN_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_BID_ORDER_MANAGEMENT_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_BID_OTHER_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_BID_PROJECT_CARGO_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_BID_TRANSCON_FLAG_YN NVARCHAR(1) NOT NULL, 
	STEP_PROGRESSION_CODE_20_DATE_TIME DATETIME, 
	STEP_PROGRESSION_CODE_50_DATE_TIME DATETIME, 
	STEP_PROGRESSION_CODE_70_DATE_TIME DATETIME, 
	STEP_PROGRESSION_CODE_90_DATE_TIME DATETIME, 
	STEP_PROGRESSION_CODE_100_DATE_TIME DATETIME, 
	STEP_PROGRESSION_CODE_20_DAYS_ON_HOLD INT, 
	OPPORTUNITY_MEETING_COUNT INT,
	OPPORTUNITY_FIRST_COMPLETED_MTG_START_DATE DATE,
	OPPORTUNITY_LAST_COMPLETED_MTG_START_DATE DATE,
	OPPORTUNITY_NEXT_COMPLETED_SCHEDULED_START_DATE DATE,
	OPPORTUNITY_SERVICE_ITEM_ID NVARCHAR(100), 
	--OPPORTUNITY_ID NVARCHAR(80), 
	--OSIC_METADATA_ID_1 BIGINT NOT NULL, 
	--OSIC_METADATA_ID_2 BIGINT NOT NULL, 
	--MISSING SERVICE_ITEM_CREATION_DATE
	ACTUAL_CLOSE_DATE DATE, 
	DELETION_DATE_TIME DATETIME, 
	DENSITY_CODE NVARCHAR(100), 
	DESTINATION_PORT_CODE NVARCHAR(60), 
	DESTINATION_BRANCH NVARCHAR(60), 
	ESTIMATED_CLOSE_DATE DATE, 
	IS_DANGEROUS_GOODS NVARCHAR(1), 
	IS_DELIVERY NVARCHAR(1), 
	IS_EXPORT_DECLARATION NVARCHAR(1), 
	IS_IMPORT_DECLARATION NVARCHAR(1), 
	IS_PICKUP NVARCHAR(1), 
	IS_TRANSACTIONAL_INSURANCE NVARCHAR(1), 
	OPPORTUNITY_SERVICE_ITEM_LAST_MODIFICATION_DATE_TIME DATETIME, 
	OPPORTUNITY_SERVICE_ITEM_PRODUCT_CODE NVARCHAR(140), 
	OPPORTUNITY_SERVICE_ITEM_STATUS_CODE NVARCHAR(100), 
	OPPORTUNITY_SERVICE_ITEM_STEP_PROGRESSION_CODE NVARCHAR(100), 
	ORIGIN_PORT_CODE NVARCHAR(60), 
	ORIGIN_BRANCH NVARCHAR(60),
	SELL_SERVICE_CODE NVARCHAR(200), 
	SERVICE_LEVEL_CODE NVARCHAR(300), 
	SERVICE_LOCATION_CODE NVARCHAR(60), 
	SERVICE_LOCATION_BRANCH NVARCHAR(60), 
	SERVICE_OFFICE_CODE NVARCHAR(60),
	SERVICE_OFFICE_BRANCH NVARCHAR(60), 
	SYSTEM_CALCULATED_DESTINATION_MONTHLY_REVENUE_AMOUNT DECIMAL(18,3), 
	SYSTEM_CALCULATED_DESTINATION_MONTHLY_REVENUE_CURRENCY_CODE NVARCHAR(12), 
	SYSTEM_CALCULATED_ORIGIN_MONTHLY_REVENUE_AMOUNT DECIMAL(18,3), 
	SYSTEM_CALCULATED_ORIGIN_MONTHLY_REVENUE_CURRENCY_CODE NVARCHAR(12), 
	SYSTEM_CALCULATED_SERVICE_LOCATION_MONTHLY_REVENUE_AMOUNT DECIMAL(18,3), 
	SYSTEM_CALCULATED_SERVICE_LOCATION_MONTHLY_REVENUE_CURRENCY_CODE NVARCHAR(12), 
	SYSTEM_CALCULATED_SERVICE_OFFICE_MONTHLY_REVENUE_AMOUNT DECIMAL(18,3), 
	SYSTEM_CALCULATED_SERVICE_OFFICE_MONTHLY_REVENUE_CURRENCY_CODE NVARCHAR(12), 
	SYSTEM_CALCULATED_TOTAL_ESTIMATED_MONTHLY_REVENUE_AMOUNT DECIMAL(18,3), 
	SYSTEM_CALCULATED_TOTAL_ESTIMATED_MONTHLY_REVENUE_CURRENCY_CODE NVARCHAR(12), 
	TRANSACTIONAL_INSURANCE_TOTAL_INSURED_VALUE_AMOUNT DECIMAL(18,3), 
	TRANSACTIONAL_INSURANCE_TOTAL_INSURED_VALUE_CURRENCY_CODE NVARCHAR(12), 
	USER_ESTIMATED_DESTINATION_MONTHLY_REVENUE_AMOUNT DECIMAL(18,3), 
	USER_ESTIMATED_DESTINATION_MONTHLY_REVENUE_CURRENCY_CODE NVARCHAR(12), 
	USER_ESTIMATED_ORIGIN_MONTHLY_REVENUE_AMOUNT DECIMAL(18,3), 
	USER_ESTIMATED_ORIGIN_MONTHLY_REVENUE_CURRENCY_CODE NVARCHAR(12), 
	USER_ESTIMATED_SERVICE_LOCATION_MONTHLY_REVENUE_AMOUNT DECIMAL(18,3), 
	USER_ESTIMATED_SERVICE_LOCATION_MONTHLY_REVENUE_CURRENCY_CODE NVARCHAR(12), 
	USER_ESTIMATED_SERVICE_OFFICE_MONTHLY_REVENUE_AMOUNT DECIMAL(18,3), 
	USER_ESTIMATED_SERVICE_OFFICE_MONTHLY_REVENUE_CURRENCY_CODE NVARCHAR(12), 
	USER_TOTAL_ESTIMATED_MONTHLY_REVENUE_FROM_USER_ENTERED_REVENUE_AMOUNT DECIMAL(18,3), 
	USER_TOTAL_ESTIMATED_MONTHLY_REVENUE_FROM_USER_ENTERED_REVENUE_CURRENCY_CODE NVARCHAR(12), 
	WIN_PROBABILITY_CODE NVARCHAR(100),
	MONTHLY_QUANTITY DECIMAL(19,2), 
	MONTHLY_QUANTITY_UNIT_CODE NVARCHAR(25), 
	MONTHLY_TRANSACTIONS INTEGER, 
	PERCENT_AWARDED_VOLUME_CODE NVARCHAR(25), 
	PERCENT_INCUMBENCY_CODE NVARCHAR(25), 
	PERCENT_TARGETED_CODE NVARCHAR(25),
	INSERT_DATE datetime NOT NULL DEFAULT GETDATE()
	CONSTRAINT PK_STAGE_OPPORTUNITY_SERVICE_ITEM PRIMARY KEY (STAGE_OPPORTUNITY_SERVICE_ITEM_KEY)
)

/****** Create the Opportunity and Meeting Bridge table ******/
CREATE TABLE DWSales.stage.STAGE_OPPORTUNITY_MEETING_BRIDGE (
	STAGE_OPPORTUNITY_MEETING_BRIDGE_KEY BIGINT IDENTITY NOT NULL, 
	OPPORTUNITY_ID NVARCHAR(100), 
	MEETING_ID NVARCHAR(100),
	INSERT_DATE datetime NOT NULL DEFAULT GETDATE()
	CONSTRAINT PK_STAGE_OPPORTUNITY_MEETING_BRIDGE PRIMARY KEY (STAGE_OPPORTUNITY_MEETING_BRIDGE_KEY)
)



/****** Create the Opportunity table ******/
CREATE TABLE DWSales.sales.OPPORTUNITY (
	OPPORTUNITY_KEY BIGINT IDENTITY  NOT NULL, 
	OPPORTUNITY_ID NVARCHAR(80) NOT NULL, 
	--OC_METADATA_ID_1 BIGINT NOT NULL, 
	--OC_METADATA_ID_2 BIGINT NOT NULL, 
	ACTIVITY_CONTEXT NVARCHAR(40), 
	--COMPANY_ORGANIZATION_ID NVARCHAR(8), 
	CREATION_DATE_TIME DATETIME NOT NULL, 
	ESTIMATED_COMPLETION_DATE DATE, 
	CLOSE_DATE_TIME DATETIME, 
	CLOSE_YEAR_MONTH INTEGER, 
	LAST_MODIFICATION_DATE_TIME DATETIME, 
	ESTIMATED_TOTAL_MONTHLY_REVENUE_FROM_SERVICE_ITEMS_AMOUNT DECIMAL(18,3), 
	ESTIMATED_TOTAL_MONTHLY_REVENUE_FROM_SERVICE_ITEMS_CURRENCY_CODE NVARCHAR(3), 
	GCI_NUMBER NVARCHAR(8), 
	CLIENT_KEY BIGINT, 
	--INDUSTRY NVARCHAR(100), 
	INVESTMENT_AND_DESIRABILITY_CODE NVARCHAR(25), 
	IS_PROJECT_BASED NVARCHAR(1), 
	IS_REQUEST_FOR_INFORMATION NVARCHAR(1), 
	IS_REQUEST_FOR_PRICE NVARCHAR(1), 
	IS_REQUEST_FOR_QUOTE NVARCHAR(1), 
	--LATEST_EXTERNAL_MEETING_DATE DATE, 
	LEGAL_NAME NVARCHAR(240), 
	OPPORTUNITY_DESCRIPTION NVARCHAR(300), 
	OPPORTUNITY_OWNER_ID BIGINT, 
	OPPORTUNITY_OWNER_BRANCH  NVARCHAR(120),
	OPPORTUNITY_OWNER_BRANCH_KEY INT,
	--OPPORTUNITY_SOLUTION NVARCHAR(max), 
	OPPORTUNITY_STATUS_CHANGE_DATE_TIME DATETIME NOT NULL, 
	OPPORTUNITY_STATUS_CODE NVARCHAR(100) NOT NULL, 
	OPPORTUNITY_STEP_PROGRESSION_CODE NVARCHAR(100), 
	OPPORTUNITY_STEP_PROGRESSION_CODE_CHANGE_DATE_TIME DATETIME NULL, 
	OPPORTUNITY_TYPE_CODE NVARCHAR(80)  NULL, 
	OPPORTUNITY_TYPE_CODE_CHANGE_DATE_TIME DATETIME NULL, 
	OWNING_BRANCH_CODE NVARCHAR(120), 
	PERCENT_OF_ESTIMATED_MONTHLY_REVENUE_FROM_INCUMBENCY_CODE NVARCHAR(100), 
	PRIMARY_FOCUS_CODE NVARCHAR(100), 
	--PROJECT_BASED_DURATION_IN_MONTHS BIGINT, 
	--REASON_LOST NVARCHAR(100), 
	SEGMENTATION_CODE NVARCHAR(100), 
	TRANSITION_STATUS_CODE NVARCHAR(100), 
	USER_ESTIMATED_TOTAL_MONTHLY_REVENUE_AMOUNT DECIMAL(18,3), 
	USER_ESTIMATED_TOTAL_MONTHLY_REVENUE_AMOUNT_CURRENCY_CODE NVARCHAR(12), 
	--[CHECKSUM] NVARCHAR(32), 
	TRANSITION_STATUS_SET_TIME DATETIME, 
	ACCOUNT_ID NVARCHAR(8), 
	ACCOUNT_NAME NVARCHAR(240), 
	CUSTOMER_ACCOUNT_MANAGEMENT_LEVEL_CODE NVARCHAR(36), 
	--BRANCH_KEY INTEGER, 
	--CREATION_DATE_TIME_DATE_KEY INTEGER, 
	--ESTIMATED_COMPLETION_DATE_DATE_KEY INTEGER, 
	--LAST_MODIFICATION_DATE_TIME_DATE_KEY INTEGER, 
	ACTUAL_BID_KICK_OFF_DATE DATE, 
	BID_RECEIVED_ACT_DATE DATE, 
	BID_RECEIVED_EST_DATE DATE, 
	BID_ROUND_ACTUAL_COMPLETION_DATE DATE, 
	BID_ROUND_ESTIMATED_COMPLETION_DATE DATE, 
	BID_ROUND_NUMBER INTEGER, 
	CUSTOMER_DEBRIEF_ACTUAL_DATE DATE, 
	CUSTOMER_DEBRIEF_ESTIMATED_DATE DATE, 
	ESTIMATED_BID_KICK_OFF_DATE DATE, 
	INVOLVED_BRANCHES NVARCHAR(740), 
	OUTCOME_RECEIVED_ACTUAL_DATE DATE, 
	OUTCOME_RECEIVED_ESTIMATED_DATE DATE, 
	PRODUCTS_AIR_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_CUSTOMS_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_DISTRIBUTION_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_OCEAN_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_ORDER_MANAGEMENT_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_OTHER_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_PROJECT_CARGO_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_TRANSCON_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCT_CODES_FROM_BID NVARCHAR(140), 
	INDUSTRY_DESCRIPTION NVARCHAR(400), 
	REASON_LOST_DESCRIPTION NVARCHAR(1020), 
	VERTICAL_INDUSTRY_TEAM_CODE NVARCHAR(36), 
	ACCOUNT_STATUS NVARCHAR(36), 
	CUSTOMER_ACCOUNT_OWNER_EMPLOYEE_ID BIGINT, 
	CUSTOMER_ACCOUNT_OWNER_NAME NVARCHAR(270), 
	EXTERNAL_CONTACT_NAMES NVARCHAR(1500), 
	DUNS_NUMBER NVARCHAR(9), 
	PRODUCTS_INSURANCE_FLAG_YN NVARCHAR(1) NOT NULL , 
	PRODUCT_CODES_FROM_USER NVARCHAR(140) NULL, 
	PRODUCTS_BID_AIR_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_BID_CUSTOMS_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_BID_DISTRIBUTION_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_BID_INSURANCE_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_BID_OCEAN_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_BID_ORDER_MANAGEMENT_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_BID_OTHER_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_BID_PROJECT_CARGO_FLAG_YN NVARCHAR(1) NOT NULL, 
	PRODUCTS_BID_TRANSCON_FLAG_YN NVARCHAR(1) NOT NULL, 
	STEP_PROGRESSION_CODE_20_DATE_TIME DATETIME, 
	STEP_PROGRESSION_CODE_50_DATE_TIME DATETIME, 
	STEP_PROGRESSION_CODE_70_DATE_TIME DATETIME, 
	STEP_PROGRESSION_CODE_90_DATE_TIME DATETIME, 
	STEP_PROGRESSION_CODE_100_DATE_TIME DATETIME, 
	STEP_PROGRESSION_CODE_20_DAYS_ON_HOLD INT, 
	OPPORTUNITY_MEETING_COUNT INT,
	OPPORTUNITY_FIRST_COMPLETED_MTG_START_DATE DATE,
	OPPORTUNITY_LAST_COMPLETED_MTG_START_DATE DATE,
	OPPORTUNITY_NEXT_COMPLETED_SCHEDULED_START_DATE DATE,

	NEW_OR_OTHER NVARCHAR(50),
	NAMED_ACCOUNT_FLAG NVARCHAR(50),

	INSERT_DATE datetime NOT NULL DEFAULT GETDATE()
	CONSTRAINT PK_OPPORTUNITY PRIMARY KEY (OPPORTUNITY_KEY)
)




/****** Create the Opportunity Service Item table ******/
CREATE TABLE DWSales.sales.OPPORTUNITY_SERVICE_ITEM (
	OPPORTUNITY_SERVICE_ITEM_KEY BIGINT IDENTITY NOT NULL, 
	OPPORTUNITY_SERVICE_ITEM_ID NVARCHAR(100), 
	OPPORTUNITY_ID NVARCHAR(80), 
	OPPORTUNITY_KEY BIGINT NOT NULL,
	--OSIC_METADATA_ID_1 BIGINT NOT NULL, 
	--OSIC_METADATA_ID_2 BIGINT NOT NULL, 
	ACTUAL_CLOSE_DATE DATE, 
	DELETION_DATE_TIME DATETIME, 
	DENSITY_CODE NVARCHAR(100), 
	DESTINATION_PORT_CODE NVARCHAR(60), 
	DESTINATION_BRANCH NVARCHAR(60), 
	ESTIMATED_CLOSE_DATE DATE, 
	IS_DANGEROUS_GOODS NVARCHAR(1), 
	IS_DELIVERY NVARCHAR(1), 
	IS_EXPORT_DECLARATION NVARCHAR(1), 
	IS_IMPORT_DECLARATION NVARCHAR(1), 
	IS_PICKUP NVARCHAR(1), 
	IS_TRANSACTIONAL_INSURANCE NVARCHAR(1), 
	LAST_MODIFICATION_DATE_TIME DATETIME, 
	OPPORTUNITY_SERVICE_ITEM_PRODUCT_CODE NVARCHAR(140), 
	OPPORTUNITY_SERVICE_ITEM_STATUS_CODE NVARCHAR(100), 
	OPPORTUNITY_SERVICE_ITEM_STEP_PROGRESSION_CODE NVARCHAR(100), 
	ORIGIN_PORT_CODE NVARCHAR(60), 
	ORIGIN_BRANCH NVARCHAR(60),
	SELL_SERVICE_CODE NVARCHAR(200), 
	SERVICE_LEVEL_CODE NVARCHAR(300), 
	SERVICE_LOCATION_CODE NVARCHAR(60), 
	SERVICE_LOCATION_BRANCH NVARCHAR(60), 
	SERVICE_OFFICE_CODE NVARCHAR(60),
	SERVICE_OFFICE_BRANCH NVARCHAR(60), 
	SYSTEM_CALCULATED_DESTINATION_MONTHLY_REVENUE_AMOUNT DECIMAL(18,3), 
	SYSTEM_CALCULATED_DESTINATION_MONTHLY_REVENUE_CURRENCY_CODE NVARCHAR(12), 
	SYSTEM_CALCULATED_ORIGIN_MONTHLY_REVENUE_AMOUNT DECIMAL(18,3), 
	SYSTEM_CALCULATED_ORIGIN_MONTHLY_REVENUE_CURRENCY_CODE NVARCHAR(12), 
	SYSTEM_CALCULATED_SERVICE_LOCATION_MONTHLY_REVENUE_AMOUNT DECIMAL(18,3), 
	SYSTEM_CALCULATED_SERVICE_LOCATION_MONTHLY_REVENUE_CURRENCY_CODE NVARCHAR(12), 
	SYSTEM_CALCULATED_SERVICE_OFFICE_MONTHLY_REVENUE_AMOUNT DECIMAL(18,3), 
	SYSTEM_CALCULATED_SERVICE_OFFICE_MONTHLY_REVENUE_CURRENCY_CODE NVARCHAR(12), 
	SYSTEM_CALCULATED_TOTAL_ESTIMATED_MONTHLY_REVENUE_AMOUNT DECIMAL(18,3), 
	SYSTEM_CALCULATED_TOTAL_ESTIMATED_MONTHLY_REVENUE_CURRENCY_CODE NVARCHAR(12), 
	TRANSACTIONAL_INSURANCE_TOTAL_INSURED_VALUE_AMOUNT DECIMAL(18,3), 
	TRANSACTIONAL_INSURANCE_TOTAL_INSURED_VALUE_CURRENCY_CODE NVARCHAR(12), 
	USER_ESTIMATED_DESTINATION_MONTHLY_REVENUE_AMOUNT DECIMAL(18,3), 
	USER_ESTIMATED_DESTINATION_MONTHLY_REVENUE_CURRENCY_CODE NVARCHAR(12), 
	USER_ESTIMATED_ORIGIN_MONTHLY_REVENUE_AMOUNT DECIMAL(18,3), 
	USER_ESTIMATED_ORIGIN_MONTHLY_REVENUE_CURRENCY_CODE NVARCHAR(12), 
	USER_ESTIMATED_SERVICE_LOCATION_MONTHLY_REVENUE_AMOUNT DECIMAL(18,3), 
	USER_ESTIMATED_SERVICE_LOCATION_MONTHLY_REVENUE_CURRENCY_CODE NVARCHAR(12), 
	USER_ESTIMATED_SERVICE_OFFICE_MONTHLY_REVENUE_AMOUNT DECIMAL(18,3), 
	USER_ESTIMATED_SERVICE_OFFICE_MONTHLY_REVENUE_CURRENCY_CODE NVARCHAR(12), 
	USER_TOTAL_ESTIMATED_MONTHLY_REVENUE_FROM_USER_ENTERED_REVENUE_AMOUNT DECIMAL(18,3), 
	USER_TOTAL_ESTIMATED_MONTHLY_REVENUE_FROM_USER_ENTERED_REVENUE_CURRENCY_CODE NVARCHAR(12), 
	WIN_PROBABILITY_CODE NVARCHAR(100),
	MONTHLY_QUANTITY DECIMAL(19,2), 
	MONTHLY_QUANTITY_UNIT_CODE NVARCHAR(25), 
	MONTHLY_TRANSACTIONS INTEGER, 
	PERCENT_AWARDED_VOLUME_CODE NVARCHAR(25), 
	PERCENT_INCUMBENCY_CODE NVARCHAR(25), 
	PERCENT_TARGETED_CODE NVARCHAR(25),
	INSERT_DATE datetime NOT NULL DEFAULT GETDATE()
	CONSTRAINT PK_OPPORTUNITY_SERVICE_ITEM PRIMARY KEY (OPPORTUNITY_SERVICE_ITEM_KEY)
)

/****** Create the Opportunity and Meeting Bridge table ******/
CREATE TABLE DWSales.sales.OPPORTUNITY_MEETING_BRIDGE (
	OPPORTUNITY_MEETING_BRIDGE_KEY BIGINT IDENTITY NOT NULL, 
	OPPORTUNITY_KEY BIGINT NOT NULL, 
	--OPPORTUNITY_ID VARCHAR(80), 
	MEETING_KEY BIGINT NOT NULL, 
	--MEETING_ID VARCHAR(80)
	INSERT_DATE datetime NOT NULL DEFAULT GETDATE()
	CONSTRAINT PK_OPPORTUNITY_MEETING_BRIDGE PRIMARY KEY (OPPORTUNITY_KEY,MEETING_KEY)
)

--********************************************************************--
-- Create the FOREIGN KEY CONSTRAINTS
--********************************************************************--
ALTER TABLE DWSales.sales.OPPORTUNITY_MEETING_BRIDGE
  ADD CONSTRAINT FK_OPPORTUNITY_MEETING_BRIDGE_OPPORTUNITY
  FOREIGN KEY (OPPORTUNITY_KEY) REFERENCES sales.OPPORTUNITY(OPPORTUNITY_KEY)

ALTER TABLE DWSales.sales.OPPORTUNITY_MEETING_BRIDGE
  ADD CONSTRAINT FK_OPPORTUNITY_MEETING_BRIDGE_MEETING
  FOREIGN KEY (MEETING_KEY) REFERENCES sales.MEETING(MEETING_KEY)

ALTER TABLE DWSales.sales.MEETING_CONTACTS
  ADD CONSTRAINT FK_MEETING_CONTACTS_MEETING
  FOREIGN KEY (MEETING_KEY) REFERENCES sales.MEETING(MEETING_KEY)

ALTER TABLE DWSales.sales.OPPORTUNITY_SERVICE_ITEM
  ADD CONSTRAINT FK_OPPORTUNITY_SERVICE_ITEM_OPPORTUNITY
  FOREIGN KEY (OPPORTUNITY_KEY) REFERENCES sales.OPPORTUNITY(OPPORTUNITY_KEY)


  ********************************************************************--
-- Drop the FOREIGN KEY CONSTRAINTS and Clear the tables
--********************************************************************--
Alter Table DWSales.sales.OPPORTUNITY_SERVICE_ITEM -- The Many Child Table
	Drop Constraint FK_OPPORTUNITY_SERVICE_ITEM_OPPORTUNITY; 

Alter Table DWSales.sales.OPPORTUNITY_MEETING_BRIDGE -- The Many Child Table
	Drop Constraint FK_OPPORTUNITY_MEETING_BRIDGE_OPPORTUNITY; 

ALTER TABLE DWSales.sales.MEETING_CONTACTS
	DROP CONSTRAINT FK_MEETING_CONTACTS_MEETING
  
ALTER TABLE DWSales.sales.OPPORTUNITY_MEETING_BRIDGE
   DROP CONSTRAINT FK_OPPORTUNITY_MEETING_BRIDGE_MEETING

  --********************************************************************--
-- Review the results of this script
--********************************************************************--
Select 'Database Created'
Select Name, xType, CrDate from SysObjects 
Where xType in ('u', 'PK', 'F')
Order By xType desc, Name

