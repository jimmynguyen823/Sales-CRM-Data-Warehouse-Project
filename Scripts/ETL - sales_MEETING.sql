USE [DWSales]
GO

/****** Object:  StoredProcedure [dbo].[spETL_MEETING]    Script Date: 2/20/2020 5:14:15 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Jimmy Nguyen
-- Create date: 2020-02-18
-- Data Source: DWSales.stage.STAGE_MEETING
-- Data Destination: DWSales.sales.MEETING
-- Description: This query loads the DWSales.sales.MEETING in the DWSales database              
-- Change Log: Who, What, When, What   

-- =============================================
CREATE PROCEDURE [dbo].[spETL_MEETING]

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	IF((SELECT COUNT(*) FROM DWSales.stage.STAGE_MEETING) > 2)
        BEGIN
                ALTER TABLE DWSales.sales.MEETING_CONTACTS DROP CONSTRAINT IF EXISTS FK_MEETING_CONTACTS_MEETING
                ALTER TABLE DWSales.sales.OPPORTUNITY_MEETING_BRIDGE DROP CONSTRAINT IF EXISTS FK_OPPORTUNITY_MEETING_BRIDGE_MEETING
                TRUNCATE TABLE DwSales.sales.MEETING
                
                INSERT INTO DwSales.sales.MEETING (MEETING_ID, ACCOUNT_ID, ACCOUNT_NAME, ACTIVITY_CONTEXT, ADDRESS_LINE1, ADDRESS_LINE2, ADDRESS_LINE3, CITY, COMPANY_ORGANIZATION_ID, COUNTRY_NAME, CREATION_DATE_TIME, GCI_NUMBER, CLIENT_KEY, INDUSTRY_CODE, INDUSTRY_DESCRIPTION, INVOLVED_BRANCHES, IS_REVIEW, LAST_MODIFICATION_DATE_TIME, LEGAL_NAME, LOCATION_NAME, MEETING_END_DATE_TIME, MEETING_METHOD_CODE, MEETING_OBJECTIVE, MEETING_START_DATE_TIME, MEETING_SUBJECT, MEETING_TYPE_CODE, OPPORTUNITY_COUNT, OWNER_EMPLOYEE_ID, OWNING_BRANCH_CODE, POSTAL_CODE, PRODUCTS_AIR_FLAG_YN, PRODUCTS_CUSTOMS_FLAG_YN, PRODUCTS_DISTRIBUTION_FLAG_YN, PRODUCTS_INSURANCE_FLAG_YN, PRODUCTS_OCEAN_FLAG_YN, PRODUCTS_ORDER_MANAGEMENT_FLAG_YN, PRODUCTS_OTHER_FLAG_YN, PRODUCTS_PROJECT_CARGO_FLAG_YN, PRODUCTS_TRANSCON_FLAG_YN, PRODUCT_CODES, STATE_PROVINCE_NAME, STATUS_CODE, VERTICAL_INDUSTRY_TEAM_CODE, MEETING_PRIMARY_EXTERNAL_CONTACT_ID, DUNS_NUMBER, POST_MEETING_NOTES, PRE_MEETING_NOTES, CUSTOMER_ACCOUNT_OWNER_EMPLOYEE_ID, CLOSE_DATE_TIME) 
                SELECT DISTINCT
                        MEETING_ID, 
                        CASE WHEN ACCOUNT_ID = '' THEN NULL ELSE ACCOUNT_ID END AS ACCOUNT_ID , 
                        CASE WHEN ACCOUNT_NAME = '' THEN NULL ELSE ACCOUNT_NAME END AS ACCOUNT_NAME, 
                        ACTIVITY_CONTEXT, 
                        CASE WHEN ADDRESS_LINE1 = '' THEN NULL ELSE ADDRESS_LINE1 END AS ADDRESS_LINE1, 
                        CASE WHEN ADDRESS_LINE2 = '' THEN NULL ELSE ADDRESS_LINE2 END AS ADDRESS_LINE2, 
                        CASE WHEN ADDRESS_LINE3 = '' THEN NULL ELSE ADDRESS_LINE3 END AS ADDRESS_LINE3, 
                        CASE WHEN CITY = '' THEN NULL ELSE CITY  END AS CITY , 
                        CASE WHEN COMPANY_ORGANIZATION_ID = '' THEN NULL ELSE COMPANY_ORGANIZATION_ID END AS COMPANY_ORGANIZATION_ID, 
                        CASE WHEN COUNTRY_NAME = '' THEN NULL ELSE COUNTRY_NAME END AS COUNTRY_NAME, 
                        CREATION_DATE_TIME, 
                        CASE WHEN GCI_NUMBER = '' THEN NULL ELSE GCI_NUMBER END AS GCI_NUMBER, 
						client.CLIENT_KEY,
                        CASE WHEN INDUSTRY_CODE  = '' THEN NULL ELSE INDUSTRY_CODE END AS INDUSTRY_CODE, 
                        CASE WHEN INDUSTRY_DESCRIPTION  = '' THEN NULL ELSE INDUSTRY_DESCRIPTION END AS INDUSTRY_DESCRIPTION, 
                        CASE WHEN INVOLVED_BRANCHES  = '' THEN NULL ELSE INVOLVED_BRANCHES END AS INVOLVED_BRANCHES, 
                        CASE WHEN IS_REVIEW  = '' THEN NULL ELSE IS_REVIEW END AS IS_REVIEW, 
                        LAST_MODIFICATION_DATE_TIME, 
                        CASE WHEN LEGAL_NAME = '' THEN NULL ELSE LEGAL_NAME END AS LEGAL_NAME, 
                        CASE WHEN LOCATION_NAME = '' THEN NULL ELSE LOCATION_NAME END AS LOCATION_NAME, 
                        CASE WHEN MEETING_END_DATE_TIME = '1899-12-30 00:00:00' THEN NULL ELSE MEETING_END_DATE_TIME END AS MEETING_END_DATE_TIME, 
                        MEETING_METHOD_CODE, 
                        CASE WHEN MEETING_OBJECTIVE = '' THEN NULL ELSE MEETING_OBJECTIVE END AS MEETING_OBJECTIVE, 
                        MEETING_START_DATE_TIME, 
                        CASE WHEN MEETING_SUBJECT = '' THEN NULL ELSE MEETING_SUBJECT END AS MEETING_SUBJECT, 
                        MEETING_TYPE_CODE, 
                        OPPORTUNITY_COUNT, 
                        CASE WHEN OWNER_EMPLOYEE_ID = 0 THEN NULL ELSE OWNER_EMPLOYEE_ID END AS OWNER_EMPLOYEE_ID , 
                        CASE WHEN OWNING_BRANCH_CODE = '' THEN NULL ELSE OWNING_BRANCH_CODE END AS OWNING_BRANCH_CODE, 
                        CASE WHEN POSTAL_CODE = '' THEN NULL ELSE POSTAL_CODE END AS POSTAL_CODE, 
                        PRODUCTS_AIR_FLAG_YN, 
                        PRODUCTS_CUSTOMS_FLAG_YN, 
                        PRODUCTS_DISTRIBUTION_FLAG_YN, 
                        PRODUCTS_INSURANCE_FLAG_YN, 
                        PRODUCTS_OCEAN_FLAG_YN, 
                        PRODUCTS_ORDER_MANAGEMENT_FLAG_YN, 
                        PRODUCTS_OTHER_FLAG_YN, 
                        PRODUCTS_PROJECT_CARGO_FLAG_YN, 
                        PRODUCTS_TRANSCON_FLAG_YN, 
                        CASE WHEN PRODUCT_CODES = '' THEN NULL ELSE PRODUCT_CODES END AS PRODUCT_CODES, 
                        CASE WHEN STATE_PROVINCE_NAME = '' THEN NULL ELSE STATE_PROVINCE_NAME END AS STATE_PROVINCE_NAME, 
                        STATUS_CODE, 
                        CASE WHEN VERTICAL_INDUSTRY_TEAM_CODE = '' THEN NULL ELSE VERTICAL_INDUSTRY_TEAM_CODE END AS VERTICAL_INDUSTRY_TEAM_CODE, 
                        CASE WHEN MEETING_PRIMARY_EXTERNAL_CONTACT_ID = '' THEN NULL ELSE MEETING_PRIMARY_EXTERNAL_CONTACT_ID END AS MEETING_PRIMARY_EXTERNAL_CONTACT_ID, 
                        CASE WHEN DUNS_NUMBER = '' THEN NULL ELSE DUNS_NUMBER END AS DUNS_NUMBER, 
                        CASE WHEN POST_MEETING_NOTES = '' THEN NULL ELSE POST_MEETING_NOTES END AS POST_MEETING_NOTES, 
                        CASE WHEN PRE_MEETING_NOTES = '' THEN NULL ELSE PRE_MEETING_NOTES END AS PRE_MEETING_NOTES , 
                        CASE WHEN CUSTOMER_ACCOUNT_OWNER_EMPLOYEE_ID = 0 THEN NULL ELSE CUSTOMER_ACCOUNT_OWNER_EMPLOYEE_ID END AS CUSTOMER_ACCOUNT_OWNER_EMPLOYEE_ID , 
                        CASE WHEN CLOSE_DATE_TIME = '1899-12-30 00:00:00' THEN NULL ELSE CLOSE_DATE_TIME END AS CLOSE_DATE_TIME
                  FROM DwSales.stage.STAGE_MEETING
				  LEFT JOIN (SELECT client_number, client_key FROM dbo.client_dimension) client
						ON client.client_number = STAGE_MEETING.gci_number 
        END

	
END
GO


